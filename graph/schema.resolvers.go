package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.74

import (
	"context"
	"fmt"
	"github.com/mmishra12/gqlgen-todos/graph/model"
)

func (r *queryResolver) GetTasks(ctx context.Context) (*model.GetTasksResponse, error) {
	fmt.Println("GetTasks")
	data := []*model.Task{
		{
			TaskID:      "12131",
			Name:        "Sample Task",
			Description: nil,
			Status:      "Pending",
			StartTime:   nil,
			EndTime:     nil,
			UpdatedUser: "john.doe",
			Subtasks:    nil,
		},
	}

	meta := &model.Meta{
		TotalTasks: int32(len(data)), // e.g., 1
	}

	return &model.GetTasksResponse{
		Data: data,
		Meta: meta, // âœ… must not be nil
	}, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {

	panic(fmt.Errorf("not implemented: Todos - todos"))
}
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }
type mutationResolver struct{ *Resolver }
*/
